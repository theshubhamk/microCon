

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Aug 31 07:38:58 2019

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	idataCOMRAM
    24  002C53                     __pidataCOMRAM:
    25                           	opt stack 0
    26                           
    27                           ;initializer for pattern1@mask1
    28  002C53  0080               	dw	128
    29                           
    30                           ;initializer for pattern1@mask2
    31  002C55  0001               	dw	1
    32                           
    33                           ;initializer for pattern2@mask
    34  002C57  00FF               	dw	255
    35                           
    36                           ;initializer for pattern2@mask1
    37  002C59  0080               	dw	128
    38                           
    39                           ;initializer for pattern2@mask2
    40  002C5B  0001               	dw	1
    41                           
    42                           ;initializer for read_digital_keypad@once
    43  002C5D  01                 	db	1
    44  0000                     _ADCON1	set	4033
    45  0000                     _LATB	set	3978
    46  0000                     _PORTB	set	3969
    47  0000                     _PORTC	set	3970
    48  0000                     _TRISB	set	3987
    49  0000                     _TRISC	set	3988
    50  0000                     _TRISB0	set	31896
    51                           
    52                           ; #config settings
    53  0000                     
    54                           	psect	cinit
    55  002CB2                     __pcinit:
    56                           	opt stack 0
    57  002CB2                     start_initialization:
    58                           	opt stack 0
    59  002CB2                     __initialization:
    60                           	opt stack 0
    61                           
    62                           ; Clear objects allocated to COMRAM (29 bytes)
    63  002CB2  EE00  F001         	lfsr	0,__pbssCOMRAM
    64  002CB6  0E1D               	movlw	29
    65  002CB8                     clear_0:
    66  002CB8  6AEE               	clrf	postinc0,c
    67  002CBA  06E8               	decf	wreg,f,c
    68  002CBC  E1FD               	bnz	clear_0
    69                           
    70                           ; Initialize objects allocated to COMRAM (11 bytes)
    71                           ; load TBLPTR registers with __pidataCOMRAM
    72  002CBE  0E53               	movlw	low __pidataCOMRAM
    73  002CC0  6EF6               	movwf	tblptrl,c
    74  002CC2  0E2C               	movlw	high __pidataCOMRAM
    75  002CC4  6EF7               	movwf	tblptrh,c
    76  002CC6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    77  002CC8  6EF8               	movwf	tblptru,c
    78  002CCA  EE00  F01E         	lfsr	0,__pdataCOMRAM
    79  002CCE  EE10 F00B          	lfsr	1,11
    80  002CD2                     copy_data0:
    81  002CD2  0009               	tblrd		*+
    82  002CD4  CFF5 FFEE          	movff	tablat,postinc0
    83  002CD8  50E5               	movf	postdec1,w,c
    84  002CDA  50E1               	movf	fsr1l,w,c
    85  002CDC  E1FA               	bnz	copy_data0
    86  002CDE                     end_of_initialization:
    87                           	opt stack 0
    88  002CDE                     __end_of__initialization:
    89                           	opt stack 0
    90  002CDE  0100               	movlb	0
    91  002CE0  EF42  F016         	goto	_main	;jump to C main() function
    92                           tblptru	equ	0xFF8
    93                           tblptrh	equ	0xFF7
    94                           tblptrl	equ	0xFF6
    95                           tablat	equ	0xFF5
    96                           postinc0	equ	0xFEE
    97                           wreg	equ	0xFE8
    98                           postdec1	equ	0xFE5
    99                           fsr1l	equ	0xFE1
   100                           
   101                           	psect	bssCOMRAM
   102  000001                     __pbssCOMRAM:
   103                           	opt stack 0
   104  000001                     _i:
   105                           	opt stack 0
   106  000001                     	ds	2
   107  000003                     pattern1@j:
   108                           	opt stack 0
   109  000003                     	ds	2
   110  000005                     pattern1@mask:
   111                           	opt stack 0
   112  000005                     	ds	2
   113  000007                     pattern1@mask3:
   114                           	opt stack 0
   115  000007                     	ds	2
   116  000009                     pattern1@r:
   117                           	opt stack 0
   118  000009                     	ds	2
   119  00000B                     pattern1@s:
   120                           	opt stack 0
   121  00000B                     	ds	2
   122  00000D                     pattern2@j:
   123                           	opt stack 0
   124  00000D                     	ds	2
   125  00000F                     pattern2@mask3:
   126                           	opt stack 0
   127  00000F                     	ds	2
   128  000011                     pattern2@q:
   129                           	opt stack 0
   130  000011                     	ds	2
   131  000013                     pattern2@w:
   132                           	opt stack 0
   133  000013                     	ds	2
   134  000015                     pattern3@i:
   135                           	opt stack 0
   136  000015                     	ds	2
   137  000017                     pattern3@j:
   138                           	opt stack 0
   139  000017                     	ds	2
   140  000019                     pattern4@k:
   141                           	opt stack 0
   142  000019                     	ds	2
   143  00001B                     pattern4@l:
   144                           	opt stack 0
   145  00001B                     	ds	2
   146  00001D                     main@keyClone:
   147                           	opt stack 0
   148  00001D                     	ds	1
   149                           tblptru	equ	0xFF8
   150                           tblptrh	equ	0xFF7
   151                           tblptrl	equ	0xFF6
   152                           tablat	equ	0xFF5
   153                           postinc0	equ	0xFEE
   154                           wreg	equ	0xFE8
   155                           postdec1	equ	0xFE5
   156                           fsr1l	equ	0xFE1
   157                           
   158                           	psect	dataCOMRAM
   159  00001E                     __pdataCOMRAM:
   160                           	opt stack 0
   161  00001E                     pattern1@mask1:
   162                           	opt stack 0
   163  00001E                     	ds	2
   164  000020                     pattern1@mask2:
   165                           	opt stack 0
   166  000020                     	ds	2
   167  000022                     pattern2@mask:
   168                           	opt stack 0
   169  000022                     	ds	2
   170  000024                     pattern2@mask1:
   171                           	opt stack 0
   172  000024                     	ds	2
   173  000026                     pattern2@mask2:
   174                           	opt stack 0
   175  000026                     	ds	2
   176  000028                     read_digital_keypad@once:
   177                           	opt stack 0
   178  000028                     	ds	1
   179                           tblptru	equ	0xFF8
   180                           tblptrh	equ	0xFF7
   181                           tblptrl	equ	0xFF6
   182                           tablat	equ	0xFF5
   183                           postinc0	equ	0xFEE
   184                           wreg	equ	0xFE8
   185                           postdec1	equ	0xFE5
   186                           fsr1l	equ	0xFE1
   187                           
   188                           	psect	cstackCOMRAM
   189  000029                     __pcstackCOMRAM:
   190                           	opt stack 0
   191  000029                     ??_pattern3:
   192  000029                     ??_pattern4:
   193  000029                     ??_pattern1:
   194  000029                     read_digital_keypad@detection_type:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x0
   198  000029                     	ds	2
   199  00002B                     glow_on_press@key:
   200                           	opt stack 0
   201                           
   202                           ; 1 bytes @ 0x2
   203  00002B                     	ds	1
   204  00002C                     main@i:
   205                           	opt stack 0
   206                           
   207                           ; 2 bytes @ 0x3
   208  00002C                     	ds	2
   209  00002E                     main@j:
   210                           	opt stack 0
   211                           
   212                           ; 2 bytes @ 0x5
   213  00002E                     	ds	2
   214  000030                     main@key:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0x7
   218  000030                     	ds	1
   219                           tblptru	equ	0xFF8
   220                           tblptrh	equ	0xFF7
   221                           tblptrl	equ	0xFF6
   222                           tablat	equ	0xFF5
   223                           postinc0	equ	0xFEE
   224                           wreg	equ	0xFE8
   225                           postdec1	equ	0xFE5
   226                           fsr1l	equ	0xFE1
   227                           
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 36 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  j               2    5[COMRAM] int 
   238 ;;  i               2    3[COMRAM] int 
   239 ;;  key             1    7[COMRAM] unsigned char 
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   249 ;;      Params:         0       0       0       0       0       0       0
   250 ;;      Locals:         5       0       0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0       0       0
   252 ;;      Totals:         5       0       0       0       0       0       0
   253 ;;Total ram usage:        5 bytes
   254 ;; Hardware stack levels required when called:    3
   255 ;; This function calls:
   256 ;;		_glow_on_press
   257 ;;		_init_config1
   258 ;;		_read_digital_keypad
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	text0
   265  002C84                     __ptext0:
   266                           	opt stack 0
   267  002C84                     _main:
   268                           	opt stack 28
   269                           
   270                           ;main.c: 38: unsigned char key = 0xFF;
   271                           
   272                           ;incstack = 0
   273  002C84  6830               	setf	main@key,c
   274                           
   275                           ;main.c: 39: static unsigned char keyClone;
   276                           ;main.c: 40: int i = 0;
   277  002C86  0E00               	movlw	0
   278  002C88  6E2D               	movwf	main@i+1,c
   279  002C8A  0E00               	movlw	0
   280  002C8C  6E2C               	movwf	main@i,c
   281                           
   282                           ;main.c: 41: init_config1();
   283  002C8E  EC38  F016         	call	_init_config1	;wreg free
   284                           
   285                           ;main.c: 42: int j = 0;
   286  002C92  0E00               	movlw	0
   287  002C94  6E2F               	movwf	main@j+1,c
   288  002C96  0E00               	movlw	0
   289  002C98  6E2E               	movwf	main@j,c
   290  002C9A                     l130:
   291                           
   292                           ;main.c: 46: {
   293                           ;main.c: 48: key = read_digital_keypad(1);
   294  002C9A  0E01               	movlw	1
   295  002C9C  EC8F  F016         	call	_read_digital_keypad
   296  002CA0  6E30               	movwf	main@key,c
   297                           
   298                           ;main.c: 50: if(key != 0xFF)
   299  002CA2  2830               	incf	main@key,w,c
   300  002CA4  A4D8               	btfss	status,2,c
   301                           
   302                           ;main.c: 51: {
   303                           ;main.c: 52: keyClone = key;
   304  002CA6  C030  F01D         	movff	main@key,main@keyClone
   305                           
   306                           ;main.c: 53: }
   307                           ;main.c: 54: glow_on_press(keyClone);
   308  002CAA  501D               	movf	main@keyClone,w,c
   309  002CAC  EC72  F016         	call	_glow_on_press
   310  002CB0  D7F4               	goto	l130
   311  002CB2                     __end_of_main:
   312                           	opt stack 0
   313                           tblptru	equ	0xFF8
   314                           tblptrh	equ	0xFF7
   315                           tblptrl	equ	0xFF6
   316                           tablat	equ	0xFF5
   317                           postinc0	equ	0xFEE
   318                           wreg	equ	0xFE8
   319                           postdec1	equ	0xFE5
   320                           fsr1l	equ	0xFE1
   321                           status	equ	0xFD8
   322                           
   323 ;; *************** function _read_digital_keypad *****************
   324 ;; Defined at:
   325 ;;		line 9 in file "digital_keypad.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;  detection_ty    1    wreg     unsigned char 
   328 ;; Auto vars:     Size  Location     Type
   329 ;;  detection_ty    1    0[COMRAM] unsigned char 
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      unsigned char 
   332 ;; Registers used:
   333 ;;		wreg, status,2, status,0
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   339 ;;      Params:         0       0       0       0       0       0       0
   340 ;;      Locals:         1       0       0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0       0       0
   342 ;;      Totals:         1       0       0       0       0       0       0
   343 ;;Total ram usage:        1 bytes
   344 ;; Hardware stack levels used:    1
   345 ;; This function calls:
   346 ;;		Nothing
   347 ;; This function is called by:
   348 ;;		_main
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text1
   353  002D1E                     __ptext1:
   354                           	opt stack 0
   355  002D1E                     _read_digital_keypad:
   356                           	opt stack 30
   357                           
   358                           ;incstack = 0
   359                           ;read_digital_keypad@detection_type stored from wreg
   360  002D1E  6E29               	movwf	read_digital_keypad@detection_type,c
   361                           
   362                           ;digital_keypad.c: 11: static unsigned char once = 1;
   363                           ;digital_keypad.c: 13: if (detection_type == 1)
   364  002D20  0429               	decf	read_digital_keypad@detection_type,w,c
   365  002D22  A4D8               	btfss	status,2,c
   366  002D24  D015               	goto	l925
   367                           
   368                           ;digital_keypad.c: 14: {
   369                           ;digital_keypad.c: 15: if (((PORTC & 0x0F) != 0x0F) && once)
   370  002D26  5082               	movf	3970,w,c	;volatile
   371  002D28  0B0F               	andlw	15
   372  002D2A  0A0F               	xorlw	15
   373  002D2C  B4D8               	btfsc	status,2,c
   374  002D2E  D008               	goto	l921
   375  002D30  5028               	movf	read_digital_keypad@once,w,c
   376  002D32  B4D8               	btfsc	status,2,c
   377  002D34  D005               	goto	l921
   378                           
   379                           ;digital_keypad.c: 16: {
   380                           ;digital_keypad.c: 17: once = 0;
   381  002D36  0E00               	movlw	0
   382  002D38  6E28               	movwf	read_digital_keypad@once,c
   383  002D3A                     l915:
   384                           
   385                           ;digital_keypad.c: 19: return (PORTC & 0x0F);
   386  002D3A  5082               	movf	3970,w,c	;volatile
   387  002D3C  0B0F               	andlw	15
   388  002D3E  0012               	return	
   389  002D40                     l921:
   390                           
   391                           ;digital_keypad.c: 21: else if ((PORTC & 0x0F) == 0x0F)
   392  002D40  5082               	movf	3970,w,c	;volatile
   393  002D42  0B0F               	andlw	15
   394  002D44  0A0F               	xorlw	15
   395  002D46  A4D8               	btfss	status,2,c
   396  002D48  D006               	goto	l931
   397                           
   398                           ;digital_keypad.c: 22: {
   399                           ;digital_keypad.c: 23: once = 1;
   400  002D4A  0E01               	movlw	1
   401  002D4C  6E28               	movwf	read_digital_keypad@once,c
   402                           
   403                           ;digital_keypad.c: 24: }
   404                           ;digital_keypad.c: 25: }
   405  002D4E  D003               	goto	l931
   406  002D50                     l925:
   407                           
   408                           ;digital_keypad.c: 26: else if (detection_type == 0)
   409  002D50  5029               	movf	read_digital_keypad@detection_type,w,c
   410  002D52  B4D8               	btfsc	status,2,c
   411  002D54  D7F2               	goto	l915
   412  002D56                     l931:
   413                           
   414                           ;digital_keypad.c: 29: }
   415                           ;digital_keypad.c: 31: return 0xFF;
   416  002D56  0EFF               	movlw	255
   417  002D58  0012               	return	
   418  002D5A                     __end_of_read_digital_keypad:
   419                           	opt stack 0
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1l	equ	0xFE1
   428                           status	equ	0xFD8
   429                           
   430 ;; *************** function _init_config1 *****************
   431 ;; Defined at:
   432 ;;		line 26 in file "main.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, status,2, status,0, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   446 ;;      Params:         0       0       0       0       0       0       0
   447 ;;      Locals:         0       0       0       0       0       0       0
   448 ;;      Temps:          0       0       0       0       0       0       0
   449 ;;      Totals:         0       0       0       0       0       0       0
   450 ;;Total ram usage:        0 bytes
   451 ;; Hardware stack levels used:    1
   452 ;; Hardware stack levels required when called:    1
   453 ;; This function calls:
   454 ;;		_init_config
   455 ;;		_init_digital_keypad
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           	psect	text2
   462  002C70                     __ptext2:
   463                           	opt stack 0
   464  002C70                     _init_config1:
   465                           	opt stack 29
   466                           
   467                           ;main.c: 28: ADCON1 = 0x0F;
   468                           
   469                           ;incstack = 0
   470  002C70  0E0F               	movlw	15
   471  002C72  6EC1               	movwf	4033,c	;volatile
   472                           
   473                           ;main.c: 29: PORTB = 0X00;
   474  002C74  0E00               	movlw	0
   475  002C76  6E81               	movwf	3969,c	;volatile
   476                           
   477                           ;main.c: 31: TRISB0 = 0;
   478  002C78  9093               	bcf	3987,0,c	;volatile
   479                           
   480                           ;main.c: 32: init_config();
   481  002C7A  EC2F  F016         	call	_init_config	;wreg free
   482                           
   483                           ;main.c: 33: init_digital_keypad();
   484  002C7E  EC25  F016         	call	_init_digital_keypad	;wreg free
   485  002C82  0012               	return		;funcret
   486  002C84                     __end_of_init_config1:
   487                           	opt stack 0
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           postdec1	equ	0xFE5
   495                           fsr1l	equ	0xFE1
   496                           status	equ	0xFD8
   497                           
   498 ;; *************** function _init_digital_keypad *****************
   499 ;; Defined at:
   500 ;;		line 4 in file "digital_keypad.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, status,2, status,0
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   514 ;;      Params:         0       0       0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0       0       0
   517 ;;      Totals:         0       0       0       0       0       0       0
   518 ;;Total ram usage:        0 bytes
   519 ;; Hardware stack levels used:    1
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_init_config1
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text3
   528  002C4A                     __ptext3:
   529                           	opt stack 0
   530  002C4A                     _init_digital_keypad:
   531                           	opt stack 29
   532                           
   533                           ;digital_keypad.c: 6: TRISC = TRISC | 0x0F;
   534                           
   535                           ;incstack = 0
   536  002C4A  5094               	movf	3988,w,c	;volatile
   537  002C4C  090F               	iorlw	15
   538  002C4E  6E94               	movwf	3988,c	;volatile
   539  002C50  0012               	return		;funcret
   540  002C52                     __end_of_init_digital_keypad:
   541                           	opt stack 0
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           postdec1	equ	0xFE5
   549                           fsr1l	equ	0xFE1
   550                           status	equ	0xFD8
   551                           
   552 ;; *************** function _glow_on_press *****************
   553 ;; Defined at:
   554 ;;		line 4 in file "gloww.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  key             1    wreg     unsigned char 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  key             1    2[COMRAM] unsigned char 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   568 ;;      Params:         0       0       0       0       0       0       0
   569 ;;      Locals:         1       0       0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0
   571 ;;      Totals:         1       0       0       0       0       0       0
   572 ;;Total ram usage:        1 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    2
   575 ;; This function calls:
   576 ;;		_pattern1
   577 ;;		_pattern2
   578 ;;		_pattern3
   579 ;;		_pattern4
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text4
   586  002CE4                     __ptext4:
   587                           	opt stack 0
   588  002CE4                     _glow_on_press:
   589                           	opt stack 28
   590                           
   591                           ;incstack = 0
   592                           ;glow_on_press@key stored from wreg
   593  002CE4  6E2B               	movwf	glow_on_press@key,c
   594                           
   595                           ;gloww.c: 6: if(key == 0x0E)
   596  002CE6  0E0E               	movlw	14
   597  002CE8  182B               	xorwf	glow_on_press@key,w,c
   598  002CEA  A4D8               	btfss	status,2,c
   599  002CEC  D003               	goto	l887
   600                           
   601                           ;gloww.c: 7: {
   602                           ;gloww.c: 8: pattern1();
   603  002CEE  EC8C  F017         	call	_pattern1	;wreg free
   604                           
   605                           ;gloww.c: 9: }
   606  002CF2  0012               	return	
   607  002CF4                     l887:
   608                           
   609                           ;gloww.c: 10: else if(key == 0x0D)
   610  002CF4  0E0D               	movlw	13
   611  002CF6  182B               	xorwf	glow_on_press@key,w,c
   612  002CF8  A4D8               	btfss	status,2,c
   613  002CFA  D003               	goto	l891
   614                           
   615                           ;gloww.c: 11: {
   616                           ;gloww.c: 12: pattern2();
   617  002CFC  EC21  F017         	call	_pattern2	;wreg free
   618                           
   619                           ;gloww.c: 13: }
   620  002D00  0012               	return	
   621  002D02                     l891:
   622                           
   623                           ;gloww.c: 14: else if(key == 0x0B)
   624  002D02  0E0B               	movlw	11
   625  002D04  182B               	xorwf	glow_on_press@key,w,c
   626  002D06  A4D8               	btfss	status,2,c
   627  002D08  D003               	goto	l895
   628                           
   629                           ;gloww.c: 15: {
   630                           ;gloww.c: 16: pattern3();
   631  002D0A  ECAD  F016         	call	_pattern3	;wreg free
   632                           
   633                           ;gloww.c: 17: }
   634  002D0E  0012               	return	
   635  002D10                     l895:
   636                           
   637                           ;gloww.c: 18: else if(key == 0x07)
   638  002D10  0E07               	movlw	7
   639  002D12  182B               	xorwf	glow_on_press@key,w,c
   640  002D14  A4D8               	btfss	status,2,c
   641  002D16  0012               	return	
   642                           
   643                           ;gloww.c: 19: {
   644                           ;gloww.c: 20: pattern4();
   645  002D18  ECE7  F016         	call	_pattern4	;wreg free
   646  002D1C  0012               	return	
   647  002D1E                     __end_of_glow_on_press:
   648                           	opt stack 0
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           postdec1	equ	0xFE5
   656                           fsr1l	equ	0xFE1
   657                           status	equ	0xFD8
   658                           
   659 ;; *************** function _pattern4 *****************
   660 ;; Defined at:
   661 ;;		line 4 in file "pattern4.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, status,2, status,0
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   675 ;;      Params:         0       0       0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0       0       0
   677 ;;      Temps:          2       0       0       0       0       0       0
   678 ;;      Totals:         2       0       0       0       0       0       0
   679 ;;Total ram usage:        2 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_glow_on_press
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text5
   689  002DCE                     __ptext5:
   690                           	opt stack 0
   691  002DCE                     _pattern4:
   692                           	opt stack 29
   693                           
   694                           ;pattern4.c: 6: static unsigned short k, l;
   695                           ;pattern4.c: 10: if(k++ <= 15000)
   696                           
   697                           ;incstack = 0
   698  002DCE  5019               	movf	pattern4@k,w,c
   699  002DD0  6E29               	movwf	??_pattern4& (0+255),c
   700  002DD2  501A               	movf	pattern4@k+1,w,c
   701  002DD4  6E2A               	movwf	(??_pattern4+1)& (0+255),c
   702  002DD6  4A19               	infsnz	pattern4@k,f,c
   703  002DD8  2A1A               	incf	pattern4@k+1,f,c
   704  002DDA  0E99               	movlw	153
   705  002DDC  5C29               	subwf	??_pattern4,w,c
   706  002DDE  0E3A               	movlw	58
   707  002DE0  582A               	subwfb	??_pattern4+1,w,c
   708  002DE2  B0D8               	btfsc	status,0,c
   709  002DE4  D00D               	goto	l773
   710                           
   711                           ;pattern4.c: 11: {
   712                           ;pattern4.c: 12: PORTB = 0xF0;
   713  002DE6  0EF0               	movlw	240
   714  002DE8  6E81               	movwf	3969,c	;volatile
   715                           
   716                           ;pattern4.c: 13: if(k == 15000)
   717  002DEA  0E98               	movlw	152
   718  002DEC  1819               	xorwf	pattern4@k,w,c
   719  002DEE  E108               	bnz	l773
   720  002DF0  0E3A               	movlw	58
   721  002DF2  181A               	xorwf	pattern4@k+1,w,c
   722  002DF4  A4D8               	btfss	status,2,c
   723  002DF6  D004               	goto	l773
   724                           
   725                           ;pattern4.c: 14: {
   726                           ;pattern4.c: 15: l = 0;
   727  002DF8  0E00               	movlw	0
   728  002DFA  6E1C               	movwf	pattern4@l+1,c
   729  002DFC  0E00               	movlw	0
   730  002DFE  6E1B               	movwf	pattern4@l,c
   731  002E00                     l773:
   732                           
   733                           ;pattern4.c: 16: }
   734                           ;pattern4.c: 17: }
   735                           ;pattern4.c: 18: if(l++ <= 15000 && k >= 15000)
   736  002E00  501B               	movf	pattern4@l,w,c
   737  002E02  6E29               	movwf	??_pattern4& (0+255),c
   738  002E04  501C               	movf	pattern4@l+1,w,c
   739  002E06  6E2A               	movwf	(??_pattern4+1)& (0+255),c
   740  002E08  4A1B               	infsnz	pattern4@l,f,c
   741  002E0A  2A1C               	incf	pattern4@l+1,f,c
   742  002E0C  0E99               	movlw	153
   743  002E0E  5C29               	subwf	??_pattern4,w,c
   744  002E10  0E3A               	movlw	58
   745  002E12  582A               	subwfb	??_pattern4+1,w,c
   746  002E14  B0D8               	btfsc	status,0,c
   747  002E16  0012               	return	
   748  002E18  0E98               	movlw	152
   749  002E1A  5C19               	subwf	pattern4@k,w,c
   750  002E1C  0E3A               	movlw	58
   751  002E1E  581A               	subwfb	pattern4@k+1,w,c
   752  002E20  A0D8               	btfss	status,0,c
   753  002E22  0012               	return	
   754                           
   755                           ;pattern4.c: 19: {
   756                           ;pattern4.c: 20: PORTB = 0x0F;
   757  002E24  0E0F               	movlw	15
   758  002E26  6E81               	movwf	3969,c	;volatile
   759                           
   760                           ;pattern4.c: 21: if(l == 15000)
   761  002E28  0E98               	movlw	152
   762  002E2A  181B               	xorwf	pattern4@l,w,c
   763  002E2C  E109               	bnz	l13
   764  002E2E  0E3A               	movlw	58
   765  002E30  181C               	xorwf	pattern4@l+1,w,c
   766  002E32  A4D8               	btfss	status,2,c
   767  002E34  0012               	return	
   768                           
   769                           ;pattern4.c: 22: {
   770                           ;pattern4.c: 23: k = 0;
   771  002E36  0E00               	movlw	0
   772  002E38  6E1A               	movwf	pattern4@k+1,c
   773  002E3A  0E00               	movlw	0
   774  002E3C  6E19               	movwf	pattern4@k,c
   775  002E3E  0012               	return	
   776  002E40                     l13:
   777  002E40  0012               	return		;funcret
   778  002E42                     __end_of_pattern4:
   779                           	opt stack 0
   780                           tblptru	equ	0xFF8
   781                           tblptrh	equ	0xFF7
   782                           tblptrl	equ	0xFF6
   783                           tablat	equ	0xFF5
   784                           postinc0	equ	0xFEE
   785                           wreg	equ	0xFE8
   786                           postdec1	equ	0xFE5
   787                           fsr1l	equ	0xFE1
   788                           status	equ	0xFD8
   789                           
   790 ;; *************** function _pattern3 *****************
   791 ;; Defined at:
   792 ;;		line 5 in file "pattern3.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   806 ;;      Params:         0       0       0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0
   808 ;;      Temps:          2       0       0       0       0       0       0
   809 ;;      Totals:         2       0       0       0       0       0       0
   810 ;;Total ram usage:        2 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; This function calls:
   813 ;;		Nothing
   814 ;; This function is called by:
   815 ;;		_glow_on_press
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text6
   820  002D5A                     __ptext6:
   821                           	opt stack 0
   822  002D5A                     _pattern3:
   823                           	opt stack 29
   824                           
   825                           ;pattern3.c: 7: static unsigned short i, j;
   826                           ;pattern3.c: 11: if(i++ <= 15000)
   827                           
   828                           ;incstack = 0
   829  002D5A  5015               	movf	pattern3@i,w,c
   830  002D5C  6E29               	movwf	??_pattern3& (0+255),c
   831  002D5E  5016               	movf	pattern3@i+1,w,c
   832  002D60  6E2A               	movwf	(??_pattern3+1)& (0+255),c
   833  002D62  4A15               	infsnz	pattern3@i,f,c
   834  002D64  2A16               	incf	pattern3@i+1,f,c
   835  002D66  0E99               	movlw	153
   836  002D68  5C29               	subwf	??_pattern3,w,c
   837  002D6A  0E3A               	movlw	58
   838  002D6C  582A               	subwfb	??_pattern3+1,w,c
   839  002D6E  B0D8               	btfsc	status,0,c
   840  002D70  D00D               	goto	l871
   841                           
   842                           ;pattern3.c: 12: {
   843                           ;pattern3.c: 13: PORTB = 0xAA;
   844  002D72  0EAA               	movlw	170
   845  002D74  6E81               	movwf	3969,c	;volatile
   846                           
   847                           ;pattern3.c: 14: if(i == 15000)
   848  002D76  0E98               	movlw	152
   849  002D78  1815               	xorwf	pattern3@i,w,c
   850  002D7A  E108               	bnz	l871
   851  002D7C  0E3A               	movlw	58
   852  002D7E  1816               	xorwf	pattern3@i+1,w,c
   853  002D80  A4D8               	btfss	status,2,c
   854  002D82  D004               	goto	l871
   855                           
   856                           ;pattern3.c: 15: {
   857                           ;pattern3.c: 16: j = 0;
   858  002D84  0E00               	movlw	0
   859  002D86  6E18               	movwf	pattern3@j+1,c
   860  002D88  0E00               	movlw	0
   861  002D8A  6E17               	movwf	pattern3@j,c
   862  002D8C                     l871:
   863                           
   864                           ;pattern3.c: 17: }
   865                           ;pattern3.c: 19: }
   866                           ;pattern3.c: 20: if(j++ <= 15000 && i >= 15000)
   867  002D8C  5017               	movf	pattern3@j,w,c
   868  002D8E  6E29               	movwf	??_pattern3& (0+255),c
   869  002D90  5018               	movf	pattern3@j+1,w,c
   870  002D92  6E2A               	movwf	(??_pattern3+1)& (0+255),c
   871  002D94  4A17               	infsnz	pattern3@j,f,c
   872  002D96  2A18               	incf	pattern3@j+1,f,c
   873  002D98  0E99               	movlw	153
   874  002D9A  5C29               	subwf	??_pattern3,w,c
   875  002D9C  0E3A               	movlw	58
   876  002D9E  582A               	subwfb	??_pattern3+1,w,c
   877  002DA0  B0D8               	btfsc	status,0,c
   878  002DA2  0012               	return	
   879  002DA4  0E98               	movlw	152
   880  002DA6  5C15               	subwf	pattern3@i,w,c
   881  002DA8  0E3A               	movlw	58
   882  002DAA  5816               	subwfb	pattern3@i+1,w,c
   883  002DAC  A0D8               	btfss	status,0,c
   884  002DAE  0012               	return	
   885                           
   886                           ;pattern3.c: 21: {
   887                           ;pattern3.c: 23: PORTB = 0x55;
   888  002DB0  0E55               	movlw	85
   889  002DB2  6E81               	movwf	3969,c	;volatile
   890                           
   891                           ;pattern3.c: 24: if(j == 15000)
   892  002DB4  0E98               	movlw	152
   893  002DB6  1817               	xorwf	pattern3@j,w,c
   894  002DB8  E109               	bnz	l165
   895  002DBA  0E3A               	movlw	58
   896  002DBC  1818               	xorwf	pattern3@j+1,w,c
   897  002DBE  A4D8               	btfss	status,2,c
   898  002DC0  0012               	return	
   899                           
   900                           ;pattern3.c: 25: {
   901                           ;pattern3.c: 26: i = 0;
   902  002DC2  0E00               	movlw	0
   903  002DC4  6E16               	movwf	pattern3@i+1,c
   904  002DC6  0E00               	movlw	0
   905  002DC8  6E15               	movwf	pattern3@i,c
   906  002DCA  0012               	return	
   907  002DCC                     l165:
   908  002DCC  0012               	return		;funcret
   909  002DCE                     __end_of_pattern3:
   910                           	opt stack 0
   911                           tblptru	equ	0xFF8
   912                           tblptrh	equ	0xFF7
   913                           tblptrl	equ	0xFF6
   914                           tablat	equ	0xFF5
   915                           postinc0	equ	0xFEE
   916                           wreg	equ	0xFE8
   917                           postdec1	equ	0xFE5
   918                           fsr1l	equ	0xFE1
   919                           status	equ	0xFD8
   920                           
   921 ;; *************** function _pattern2 *****************
   922 ;; Defined at:
   923 ;;		line 4 in file "pattern2.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   937 ;;      Params:         0       0       0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0
   940 ;;      Totals:         0       0       0       0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    1
   944 ;; This function calls:
   945 ;;		_init_config
   946 ;; This function is called by:
   947 ;;		_glow_on_press
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text7
   952  002E42                     __ptext7:
   953                           	opt stack 0
   954  002E42                     _pattern2:
   955                           	opt stack 28
   956                           
   957                           ;pattern2.c: 6: init_config();
   958                           
   959                           ;incstack = 0
   960  002E42  EC2F  F016         	call	_init_config	;wreg free
   961                           
   962                           ;pattern2.c: 8: {
   963                           ;pattern2.c: 11: static unsigned int mask = 0xFF, mask1 = 0x80, mask2 = 0x01, mask3 = 0;
   964                           ;pattern2.c: 12: static unsigned int j;
   965                           ;pattern2.c: 13: static unsigned short w, q;
   966                           ;pattern2.c: 16: {
   967                           ;pattern2.c: 17: if(j == 17)
   968  002E46  0E11               	movlw	17
   969  002E48  180D               	xorwf	pattern2@j,w,c
   970  002E4A  100E               	iorwf	pattern2@j+1,w,c
   971  002E4C  A4D8               	btfss	status,2,c
   972  002E4E  D013               	goto	l829
   973                           
   974                           ;pattern2.c: 18: {
   975                           ;pattern2.c: 19: j = 0;
   976  002E50  0E00               	movlw	0
   977  002E52  6E0E               	movwf	pattern2@j+1,c
   978  002E54  0E00               	movlw	0
   979  002E56  6E0D               	movwf	pattern2@j,c
   980                           
   981                           ;pattern2.c: 20: mask = 0xFF;
   982  002E58  0E00               	movlw	0
   983  002E5A  6E23               	movwf	pattern2@mask+1,c
   984  002E5C  6822               	setf	pattern2@mask,c
   985                           
   986                           ;pattern2.c: 21: mask1 = 0x80;
   987  002E5E  0E00               	movlw	0
   988  002E60  6E25               	movwf	pattern2@mask1+1,c
   989  002E62  0E80               	movlw	128
   990  002E64  6E24               	movwf	pattern2@mask1,c
   991                           
   992                           ;pattern2.c: 22: mask2 = 0x01;
   993  002E66  0E00               	movlw	0
   994  002E68  6E27               	movwf	pattern2@mask2+1,c
   995  002E6A  0E01               	movlw	1
   996  002E6C  6E26               	movwf	pattern2@mask2,c
   997                           
   998                           ;pattern2.c: 23: mask3 = 0;
   999  002E6E  0E00               	movlw	0
  1000  002E70  6E10               	movwf	pattern2@mask3+1,c
  1001  002E72  0E00               	movlw	0
  1002  002E74  6E0F               	movwf	pattern2@mask3,c
  1003  002E76                     l829:
  1004                           
  1005                           ;pattern2.c: 24: }
  1006                           ;pattern2.c: 25: if(j < 9)
  1007  002E76  500E               	movf	pattern2@j+1,w,c
  1008  002E78  E128               	bnz	l845
  1009  002E7A  0E09               	movlw	9
  1010  002E7C  5C0D               	subwf	pattern2@j,w,c
  1011  002E7E  B0D8               	btfsc	status,0,c
  1012  002E80  D024               	goto	l845
  1013                           
  1014                           ;pattern2.c: 26: {
  1015                           ;pattern2.c: 27: PORTB = mask3;
  1016  002E82  C00F  FF81         	movff	pattern2@mask3,3969	;volatile
  1017                           
  1018                           ;pattern2.c: 28: if(w == 5000 || w > 5000)
  1019  002E86  0E88               	movlw	136
  1020  002E88  1813               	xorwf	pattern2@w,w,c
  1021  002E8A  E104               	bnz	u150
  1022  002E8C  0E13               	movlw	19
  1023  002E8E  1814               	xorwf	pattern2@w+1,w,c
  1024  002E90  B4D8               	btfsc	status,2,c
  1025  002E92  D006               	goto	l837
  1026  002E94                     u150:
  1027  002E94  0E89               	movlw	137
  1028  002E96  5C13               	subwf	pattern2@w,w,c
  1029  002E98  0E13               	movlw	19
  1030  002E9A  5814               	subwfb	pattern2@w+1,w,c
  1031  002E9C  A0D8               	btfss	status,0,c
  1032  002E9E  D012               	goto	l843
  1033  002EA0                     l837:
  1034                           
  1035                           ;pattern2.c: 29: {
  1036                           ;pattern2.c: 30: mask3 = mask3 | mask2;
  1037  002EA0  5026               	movf	pattern2@mask2,w,c
  1038  002EA2  100F               	iorwf	pattern2@mask3,w,c
  1039  002EA4  6E0F               	movwf	pattern2@mask3,c
  1040  002EA6  5027               	movf	pattern2@mask2+1,w,c
  1041  002EA8  1010               	iorwf	pattern2@mask3+1,w,c
  1042  002EAA  6E10               	movwf	pattern2@mask3+1,c
  1043                           
  1044                           ;pattern2.c: 31: mask2 = mask2 << 1;
  1045  002EAC  90D8               	bcf	status,0,c
  1046  002EAE  3426               	rlcf	pattern2@mask2,w,c
  1047  002EB0  6E26               	movwf	pattern2@mask2,c
  1048  002EB2  3427               	rlcf	pattern2@mask2+1,w,c
  1049  002EB4  6E27               	movwf	pattern2@mask2+1,c
  1050                           
  1051                           ;pattern2.c: 32: j++;
  1052  002EB6  4A0D               	infsnz	pattern2@j,f,c
  1053  002EB8  2A0E               	incf	pattern2@j+1,f,c
  1054                           
  1055                           ;pattern2.c: 33: w = 0;
  1056  002EBA  0E00               	movlw	0
  1057  002EBC  6E14               	movwf	pattern2@w+1,c
  1058  002EBE  0E00               	movlw	0
  1059  002EC0  6E13               	movwf	pattern2@w,c
  1060                           
  1061                           ;pattern2.c: 34: }
  1062  002EC2  0012               	return	
  1063  002EC4                     l843:
  1064                           
  1065                           ;pattern2.c: 35: else
  1066                           ;pattern2.c: 36: {
  1067                           ;pattern2.c: 37: w++;
  1068  002EC4  4A13               	infsnz	pattern2@w,f,c
  1069  002EC6  2A14               	incf	pattern2@w+1,f,c
  1070                           
  1071                           ;pattern2.c: 38: }
  1072                           ;pattern2.c: 41: }
  1073  002EC8  0012               	return	
  1074  002ECA                     l845:
  1075                           
  1076                           ;pattern2.c: 42: else if(j == 7)
  1077  002ECA  0E07               	movlw	7
  1078  002ECC  180D               	xorwf	pattern2@j,w,c
  1079  002ECE  100E               	iorwf	pattern2@j+1,w,c
  1080  002ED0  A4D8               	btfss	status,2,c
  1081  002ED2  D004               	goto	l102
  1082                           
  1083                           ;pattern2.c: 43: {
  1084                           ;pattern2.c: 44: PORTB = 0xFF;
  1085  002ED4  6881               	setf	3969,c	;volatile
  1086                           
  1087                           ;pattern2.c: 45: j++;
  1088  002ED6  4A0D               	infsnz	pattern2@j,f,c
  1089  002ED8  2A0E               	incf	pattern2@j+1,f,c
  1090                           
  1091                           ;pattern2.c: 46: }
  1092  002EDA  0012               	return	
  1093  002EDC                     l102:
  1094                           
  1095                           ;pattern2.c: 47: else
  1096                           ;pattern2.c: 48: {
  1097                           ;pattern2.c: 49: PORTB = mask;
  1098  002EDC  C022  FF81         	movff	pattern2@mask,3969	;volatile
  1099                           
  1100                           ;pattern2.c: 51: if(q == 5000 || q > 5000)
  1101  002EE0  0E88               	movlw	136
  1102  002EE2  1811               	xorwf	pattern2@q,w,c
  1103  002EE4  E104               	bnz	u180
  1104  002EE6  0E13               	movlw	19
  1105  002EE8  1812               	xorwf	pattern2@q+1,w,c
  1106  002EEA  B4D8               	btfsc	status,2,c
  1107  002EEC  D006               	goto	l855
  1108  002EEE                     u180:
  1109  002EEE  0E89               	movlw	137
  1110  002EF0  5C11               	subwf	pattern2@q,w,c
  1111  002EF2  0E13               	movlw	19
  1112  002EF4  5812               	subwfb	pattern2@q+1,w,c
  1113  002EF6  A0D8               	btfss	status,0,c
  1114  002EF8  D00C               	goto	l861
  1115  002EFA                     l855:
  1116                           
  1117                           ;pattern2.c: 52: {
  1118                           ;pattern2.c: 53: mask = mask << 1;
  1119  002EFA  90D8               	bcf	status,0,c
  1120  002EFC  3422               	rlcf	pattern2@mask,w,c
  1121  002EFE  6E22               	movwf	pattern2@mask,c
  1122  002F00  3423               	rlcf	pattern2@mask+1,w,c
  1123  002F02  6E23               	movwf	pattern2@mask+1,c
  1124                           
  1125                           ;pattern2.c: 54: j++;
  1126  002F04  4A0D               	infsnz	pattern2@j,f,c
  1127  002F06  2A0E               	incf	pattern2@j+1,f,c
  1128                           
  1129                           ;pattern2.c: 55: q = 0;
  1130  002F08  0E00               	movlw	0
  1131  002F0A  6E12               	movwf	pattern2@q+1,c
  1132  002F0C  0E00               	movlw	0
  1133  002F0E  6E11               	movwf	pattern2@q,c
  1134                           
  1135                           ;pattern2.c: 56: }
  1136  002F10  0012               	return	
  1137  002F12                     l861:
  1138                           
  1139                           ;pattern2.c: 57: else
  1140                           ;pattern2.c: 58: {
  1141                           ;pattern2.c: 59: q++;
  1142  002F12  4A11               	infsnz	pattern2@q,f,c
  1143  002F14  2A12               	incf	pattern2@q+1,f,c
  1144  002F16  0012               	return	
  1145  002F18                     __end_of_pattern2:
  1146                           	opt stack 0
  1147                           tblptru	equ	0xFF8
  1148                           tblptrh	equ	0xFF7
  1149                           tblptrl	equ	0xFF6
  1150                           tablat	equ	0xFF5
  1151                           postinc0	equ	0xFEE
  1152                           wreg	equ	0xFE8
  1153                           postdec1	equ	0xFE5
  1154                           fsr1l	equ	0xFE1
  1155                           status	equ	0xFD8
  1156                           
  1157 ;; *************** function _pattern1 *****************
  1158 ;; Defined at:
  1159 ;;		line 14 in file "pattern1.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1173 ;;      Params:         0       0       0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0
  1175 ;;      Temps:          2       0       0       0       0       0       0
  1176 ;;      Totals:         2       0       0       0       0       0       0
  1177 ;;Total ram usage:        2 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    1
  1180 ;; This function calls:
  1181 ;;		_init_config
  1182 ;; This function is called by:
  1183 ;;		_glow_on_press
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text8
  1188  002F18                     __ptext8:
  1189                           	opt stack 0
  1190  002F18                     _pattern1:
  1191                           	opt stack 28
  1192                           
  1193                           ;pattern1.c: 16: init_config();
  1194                           
  1195                           ;incstack = 0
  1196  002F18  EC2F  F016         	call	_init_config	;wreg free
  1197                           
  1198                           ;pattern1.c: 19: static unsigned int mask = 0, mask1 = 0x80, mask2 = 0x01, mask3 = 0;
  1199                           ;pattern1.c: 20: static unsigned int j;
  1200                           ;pattern1.c: 21: static unsigned short r, s;
  1201                           ;pattern1.c: 23: {
  1202                           ;pattern1.c: 24: if(j == 17)
  1203  002F1C  0E11               	movlw	17
  1204  002F1E  1803               	xorwf	pattern1@j,w,c
  1205  002F20  1004               	iorwf	pattern1@j+1,w,c
  1206  002F22  A4D8               	btfss	status,2,c
  1207  002F24  D014               	goto	l789
  1208                           
  1209                           ;pattern1.c: 25: {
  1210                           ;pattern1.c: 26: j = 0;
  1211  002F26  0E00               	movlw	0
  1212  002F28  6E04               	movwf	pattern1@j+1,c
  1213  002F2A  0E00               	movlw	0
  1214  002F2C  6E03               	movwf	pattern1@j,c
  1215                           
  1216                           ;pattern1.c: 27: mask = 0;
  1217  002F2E  0E00               	movlw	0
  1218  002F30  6E06               	movwf	pattern1@mask+1,c
  1219  002F32  0E00               	movlw	0
  1220  002F34  6E05               	movwf	pattern1@mask,c
  1221                           
  1222                           ;pattern1.c: 28: mask1 = 0x80;
  1223  002F36  0E00               	movlw	0
  1224  002F38  6E1F               	movwf	pattern1@mask1+1,c
  1225  002F3A  0E80               	movlw	128
  1226  002F3C  6E1E               	movwf	pattern1@mask1,c
  1227                           
  1228                           ;pattern1.c: 29: mask2 = 0x01;
  1229  002F3E  0E00               	movlw	0
  1230  002F40  6E21               	movwf	pattern1@mask2+1,c
  1231  002F42  0E01               	movlw	1
  1232  002F44  6E20               	movwf	pattern1@mask2,c
  1233                           
  1234                           ;pattern1.c: 30: mask3 = 0;
  1235  002F46  0E00               	movlw	0
  1236  002F48  6E08               	movwf	pattern1@mask3+1,c
  1237  002F4A  0E00               	movlw	0
  1238  002F4C  6E07               	movwf	pattern1@mask3,c
  1239  002F4E                     l789:
  1240                           
  1241                           ;pattern1.c: 31: }
  1242                           ;pattern1.c: 32: if(j < 9)
  1243  002F4E  5004               	movf	pattern1@j+1,w,c
  1244  002F50  E12A               	bnz	l805
  1245  002F52  0E09               	movlw	9
  1246  002F54  5C03               	subwf	pattern1@j,w,c
  1247  002F56  B0D8               	btfsc	status,0,c
  1248  002F58  D026               	goto	l805
  1249                           
  1250                           ;pattern1.c: 33: {
  1251                           ;pattern1.c: 34: PORTB = mask;
  1252  002F5A  C005  FF81         	movff	pattern1@mask,3969	;volatile
  1253                           
  1254                           ;pattern1.c: 35: if(r == 5000 || r > 5000)
  1255  002F5E  0E88               	movlw	136
  1256  002F60  1809               	xorwf	pattern1@r,w,c
  1257  002F62  E104               	bnz	u80
  1258  002F64  0E13               	movlw	19
  1259  002F66  180A               	xorwf	pattern1@r+1,w,c
  1260  002F68  B4D8               	btfsc	status,2,c
  1261  002F6A  D006               	goto	l797
  1262  002F6C                     u80:
  1263  002F6C  0E89               	movlw	137
  1264  002F6E  5C09               	subwf	pattern1@r,w,c
  1265  002F70  0E13               	movlw	19
  1266  002F72  580A               	subwfb	pattern1@r+1,w,c
  1267  002F74  A0D8               	btfss	status,0,c
  1268  002F76  D014               	goto	l803
  1269  002F78                     l797:
  1270                           
  1271                           ;pattern1.c: 36: {
  1272                           ;pattern1.c: 37: mask = mask | mask1;
  1273  002F78  501E               	movf	pattern1@mask1,w,c
  1274  002F7A  1005               	iorwf	pattern1@mask,w,c
  1275  002F7C  6E05               	movwf	pattern1@mask,c
  1276  002F7E  501F               	movf	pattern1@mask1+1,w,c
  1277  002F80  1006               	iorwf	pattern1@mask+1,w,c
  1278  002F82  6E06               	movwf	pattern1@mask+1,c
  1279                           
  1280                           ;pattern1.c: 38: mask1 = mask1 >> 1;
  1281  002F84  90D8               	bcf	status,0,c
  1282  002F86  301F               	rrcf	pattern1@mask1+1,w,c
  1283  002F88  6E29               	movwf	??_pattern1& (0+255),c
  1284  002F8A  301E               	rrcf	pattern1@mask1,w,c
  1285  002F8C  6E1E               	movwf	pattern1@mask1,c
  1286  002F8E  C029  F01F         	movff	??_pattern1,pattern1@mask1+1
  1287                           
  1288                           ;pattern1.c: 39: j++;
  1289  002F92  4A03               	infsnz	pattern1@j,f,c
  1290  002F94  2A04               	incf	pattern1@j+1,f,c
  1291                           
  1292                           ;pattern1.c: 40: r = 0;
  1293  002F96  0E00               	movlw	0
  1294  002F98  6E0A               	movwf	pattern1@r+1,c
  1295  002F9A  0E00               	movlw	0
  1296  002F9C  6E09               	movwf	pattern1@r,c
  1297                           
  1298                           ;pattern1.c: 41: }
  1299  002F9E  0012               	return	
  1300  002FA0                     l803:
  1301                           
  1302                           ;pattern1.c: 42: else
  1303                           ;pattern1.c: 43: {
  1304                           ;pattern1.c: 44: r++;
  1305  002FA0  4A09               	infsnz	pattern1@r,f,c
  1306  002FA2  2A0A               	incf	pattern1@r+1,f,c
  1307                           
  1308                           ;pattern1.c: 45: }
  1309                           ;pattern1.c: 48: }
  1310  002FA4  0012               	return	
  1311  002FA6                     l805:
  1312                           
  1313                           ;pattern1.c: 49: else if(j == 7)
  1314  002FA6  0E07               	movlw	7
  1315  002FA8  1803               	xorwf	pattern1@j,w,c
  1316  002FAA  1004               	iorwf	pattern1@j+1,w,c
  1317  002FAC  A4D8               	btfss	status,2,c
  1318  002FAE  D004               	goto	l50
  1319                           
  1320                           ;pattern1.c: 50: {
  1321                           ;pattern1.c: 51: PORTB = 0xFF;
  1322  002FB0  6881               	setf	3969,c	;volatile
  1323                           
  1324                           ;pattern1.c: 52: j++;
  1325  002FB2  4A03               	infsnz	pattern1@j,f,c
  1326  002FB4  2A04               	incf	pattern1@j+1,f,c
  1327                           
  1328                           ;pattern1.c: 53: }
  1329  002FB6  0012               	return	
  1330  002FB8                     l50:
  1331                           
  1332                           ;pattern1.c: 54: else
  1333                           ;pattern1.c: 55: {
  1334                           ;pattern1.c: 56: PORTB = mask3;
  1335  002FB8  C007  FF81         	movff	pattern1@mask3,3969	;volatile
  1336                           
  1337                           ;pattern1.c: 57: if(s == 5000 || s > 5000)
  1338  002FBC  0E88               	movlw	136
  1339  002FBE  180B               	xorwf	pattern1@s,w,c
  1340  002FC0  E104               	bnz	u110
  1341  002FC2  0E13               	movlw	19
  1342  002FC4  180C               	xorwf	pattern1@s+1,w,c
  1343  002FC6  B4D8               	btfsc	status,2,c
  1344  002FC8  D006               	goto	l815
  1345  002FCA                     u110:
  1346  002FCA  0E89               	movlw	137
  1347  002FCC  5C0B               	subwf	pattern1@s,w,c
  1348  002FCE  0E13               	movlw	19
  1349  002FD0  580C               	subwfb	pattern1@s+1,w,c
  1350  002FD2  A0D8               	btfss	status,0,c
  1351  002FD4  D012               	goto	l821
  1352  002FD6                     l815:
  1353                           
  1354                           ;pattern1.c: 58: {
  1355                           ;pattern1.c: 59: mask3 = mask3 | mask2;
  1356  002FD6  5020               	movf	pattern1@mask2,w,c
  1357  002FD8  1007               	iorwf	pattern1@mask3,w,c
  1358  002FDA  6E07               	movwf	pattern1@mask3,c
  1359  002FDC  5021               	movf	pattern1@mask2+1,w,c
  1360  002FDE  1008               	iorwf	pattern1@mask3+1,w,c
  1361  002FE0  6E08               	movwf	pattern1@mask3+1,c
  1362                           
  1363                           ;pattern1.c: 60: mask2 = mask2 << 1;
  1364  002FE2  90D8               	bcf	status,0,c
  1365  002FE4  3420               	rlcf	pattern1@mask2,w,c
  1366  002FE6  6E20               	movwf	pattern1@mask2,c
  1367  002FE8  3421               	rlcf	pattern1@mask2+1,w,c
  1368  002FEA  6E21               	movwf	pattern1@mask2+1,c
  1369                           
  1370                           ;pattern1.c: 61: j++;
  1371  002FEC  4A03               	infsnz	pattern1@j,f,c
  1372  002FEE  2A04               	incf	pattern1@j+1,f,c
  1373                           
  1374                           ;pattern1.c: 62: s = 0;
  1375  002FF0  0E00               	movlw	0
  1376  002FF2  6E0C               	movwf	pattern1@s+1,c
  1377  002FF4  0E00               	movlw	0
  1378  002FF6  6E0B               	movwf	pattern1@s,c
  1379                           
  1380                           ;pattern1.c: 63: }
  1381  002FF8  0012               	return	
  1382  002FFA                     l821:
  1383                           
  1384                           ;pattern1.c: 64: else
  1385                           ;pattern1.c: 65: {
  1386                           ;pattern1.c: 66: s++;
  1387  002FFA  4A0B               	infsnz	pattern1@s,f,c
  1388  002FFC  2A0C               	incf	pattern1@s+1,f,c
  1389  002FFE  0012               	return	
  1390  003000                     __end_of_pattern1:
  1391                           	opt stack 0
  1392                           tblptru	equ	0xFF8
  1393                           tblptrh	equ	0xFF7
  1394                           tblptrl	equ	0xFF6
  1395                           tablat	equ	0xFF5
  1396                           postinc0	equ	0xFEE
  1397                           wreg	equ	0xFE8
  1398                           postdec1	equ	0xFE5
  1399                           fsr1l	equ	0xFE1
  1400                           status	equ	0xFD8
  1401                           
  1402 ;; *************** function _init_config *****************
  1403 ;; Defined at:
  1404 ;;		line 2 in file "pattern1.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1418 ;;      Params:         0       0       0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0
  1421 ;;      Totals:         0       0       0       0       0       0       0
  1422 ;;Total ram usage:        0 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_pattern1
  1428 ;;		_pattern2
  1429 ;;		_init_config1
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text9
  1434  002C5E                     __ptext9:
  1435                           	opt stack 0
  1436  002C5E                     _init_config:
  1437                           	opt stack 29
  1438                           
  1439                           ;pattern1.c: 5: TRISB = 0x00;
  1440                           
  1441                           ;incstack = 0
  1442  002C5E  0E00               	movlw	0
  1443  002C60  6E93               	movwf	3987,c	;volatile
  1444                           
  1445                           ;pattern1.c: 7: ADCON1 = 0x00;
  1446  002C62  0E00               	movlw	0
  1447  002C64  6EC1               	movwf	4033,c	;volatile
  1448                           
  1449                           ;pattern1.c: 9: LATB = 0x55;
  1450  002C66  0E55               	movlw	85
  1451  002C68  6E8A               	movwf	3978,c	;volatile
  1452                           
  1453                           ;pattern1.c: 11: PORTB = 0x00;
  1454  002C6A  0E00               	movlw	0
  1455  002C6C  6E81               	movwf	3969,c	;volatile
  1456  002C6E  0012               	return		;funcret
  1457  002C70                     __end_of_init_config:
  1458                           	opt stack 0
  1459  0000                     tblptru	equ	0xFF8
  1460                           tblptrh	equ	0xFF7
  1461                           tblptrl	equ	0xFF6
  1462                           tablat	equ	0xFF5
  1463                           postinc0	equ	0xFEE
  1464                           wreg	equ	0xFE8
  1465                           postdec1	equ	0xFE5
  1466                           fsr1l	equ	0xFE1
  1467                           status	equ	0xFD8
  1468                           tblptru	equ	0xFF8
  1469                           tblptrh	equ	0xFF7
  1470                           tblptrl	equ	0xFF6
  1471                           tablat	equ	0xFF5
  1472                           postinc0	equ	0xFEE
  1473                           wreg	equ	0xFE8
  1474                           postdec1	equ	0xFE5
  1475                           fsr1l	equ	0xFE1
  1476                           status	equ	0xFD8
  1477                           
  1478                           	psect	rparam
  1479  0000                     tblptru	equ	0xFF8
  1480                           tblptrh	equ	0xFF7
  1481                           tblptrl	equ	0xFF6
  1482                           tablat	equ	0xFF5
  1483                           postinc0	equ	0xFEE
  1484                           wreg	equ	0xFE8
  1485                           postdec1	equ	0xFE5
  1486                           fsr1l	equ	0xFE1
  1487                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_glow_on_press
    _glow_on_press->_pattern1
    _glow_on_press->_pattern3
    _glow_on_press->_pattern4

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     120
                                              3 COMRAM     5     5      0
                      _glow_on_press
                       _init_config1
                _read_digital_keypad
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_config1                                         0     0      0       0
                        _init_config
                _init_digital_keypad
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _glow_on_press                                        1     1      0      60
                                              2 COMRAM     1     1      0
                           _pattern1
                           _pattern2
                           _pattern3
                           _pattern4
 ---------------------------------------------------------------------------------
 (2) _pattern4                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _pattern3                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _pattern2                                             0     0      0       0
                        _init_config
 ---------------------------------------------------------------------------------
 (2) _pattern1                                             2     2      0       0
                                              0 COMRAM     2     2      0
                        _init_config
 ---------------------------------------------------------------------------------
 (2) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _glow_on_press
     _pattern1
       _init_config
     _pattern2
       _init_config
     _pattern3
     _pattern4
   _init_config1
     _init_config
     _init_digital_keypad
   _read_digital_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8      30       1       50.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30       3        0.0%
DATA                 0      0      30      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Aug 31 07:38:58 2019

                                _i 0001                                 l13 2E40  
                               l50 2FB8                                 u80 2F6C  
                      __CFG_OSC$XT 000000                                l102 2EDC  
                              l130 2C9A                                l165 2DCC  
                              l803 2FA0                                l821 2FFA  
                              l805 2FA6                                l815 2FD6  
                              l921 2D40                                l843 2EC4  
                              l931 2D56                                l915 2D3A  
                              l861 2F12                                l837 2EA0  
                              l845 2ECA                                l829 2E76  
                              l773 2E00                                l925 2D50  
                              l855 2EFA                                l871 2D8C  
                              l891 2D02                                l797 2F78  
                              l789 2F4E                                l895 2D10  
                              l887 2CF4                                u110 2FCA  
                              u150 2E94                                u180 2EEE  
                              wreg 000FE8                       __CFG_LVP$OFF 000000  
                     __CFG_WDT$OFF 000000              ??_read_digital_keypad 0029  
                             _LATB 000F8A                               _main 2C84  
                             fsr1l 000FE1                   glow_on_press@key 002B  
                             start 0000                       ___param_bank 000010  
                            ?_main 0029                       main@keyClone 001D  
                     ?_init_config 0029                              _PORTB 000F81  
                            _PORTC 000F82                              _TRISB 000F93  
                            _TRISC 000F94                              main@i 002C  
                            main@j 002E                     __CFG_BOREN$OFF 000000  
                            tablat 000FF5                              status 000FD8  
                  __initialization 2CB2                       __end_of_main 2CB2  
           __size_of_glow_on_press 003A                             ??_main 002C  
                    __activetblptr 000000                             _ADCON1 000FC1  
                    ?_init_config1 0029                             _TRISB0 007C98  
      __end_of_init_digital_keypad 2C52                             clear_0 2CB8  
                 __end_of_pattern1 3000                   __end_of_pattern2 2F18  
                 __end_of_pattern3 2DCE                   __end_of_pattern4 2E42  
                     __pdataCOMRAM 001E                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                   ??_init_config1 0029                      _glow_on_press 2CE4  
                       __accesstop 0060            __end_of__initialization 2CDE  
                  __CFG_PBADEN$OFF 000000                      ___rparam_used 000001  
                   __pcstackCOMRAM 0029               __size_of_init_config 0012  
                   ?_glow_on_press 0029                      pattern1@mask1 001E  
                    pattern1@mask2 0020                      pattern1@mask3 0007  
                    pattern2@mask1 0024                      pattern2@mask2 0026  
                    pattern2@mask3 000F        __end_of_read_digital_keypad 2D5A  
                        ?_pattern1 0029                          ?_pattern2 0029  
                        ?_pattern3 0029                          ?_pattern4 0029  
                          __Hparam 0000                            __Lparam 0000  
             __end_of_init_config1 2C84                            __pcinit 2CB2  
                          __ramtop 0600                            __ptext0 2C84  
                          __ptext1 2D1E                            __ptext2 2C70  
                          __ptext3 2C4A                            __ptext4 2CE4  
                          __ptext5 2DCE                            __ptext6 2D5A  
                          __ptext7 2E42                            __ptext8 2F18  
                          __ptext9 2C5E                    ??_glow_on_press 002B  
                          main@key 0030               end_of_initialization 2CDE  
                       ??_pattern1 0029                         ??_pattern2 0029  
                       ??_pattern3 0029                         ??_pattern4 0029  
                          postdec1 000FE5                            postinc0 000FEE  
     __size_of_init_digital_keypad 0008                      __pidataCOMRAM 2C53  
              start_initialization 2CB2              __size_of_init_config1 0014  
                    ??_init_config 0029                        __pbssCOMRAM 0001  
                     _init_config1 2C70                       pattern1@mask 0005  
                     pattern2@mask 0022                  __size_of_pattern1 00E8  
                __size_of_pattern2 00D6                  __size_of_pattern3 0074  
                __size_of_pattern4 0074                __end_of_init_config 2C70  
     __size_of_read_digital_keypad 003C  read_digital_keypad@detection_type 0029  
            __end_of_glow_on_press 2D1E                          copy_data0 2CD2  
              _init_digital_keypad 2C4A                           __Hrparam 0000  
                         __Lrparam 0000               ?_init_digital_keypad 0029  
                      _init_config 2C5E                          pattern1@j 0003  
                        pattern2@j 000D                          pattern3@i 0015  
                        pattern3@j 0017                          pattern1@r 0009  
                        pattern1@s 000B                          pattern2@q 0011  
                        pattern4@k 0019                          pattern4@l 001B  
                        pattern2@w 0013                      __size_of_main 002E  
          read_digital_keypad@once 0028                           _pattern1 2F18  
                         _pattern2 2E42                           _pattern3 2D5A  
                         _pattern4 2DCE              ??_init_digital_keypad 0029  
              _read_digital_keypad 2D1E               ?_read_digital_keypad 0029  
